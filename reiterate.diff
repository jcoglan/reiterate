Index: src/method_chain.js
===================================================================
--- src/method_chain.js	(revision 0)
+++ src/method_chain.js	(revision 0)
@@ -0,0 +1 @@
+Function.MethodChain=(function(){var h=function(e){var f=[],g=e||{};this.____=function(a,b){f.push({func:a,args:b})};this._=function(){var a=arguments[0],b=[];if(!/^(?:function|object)$/.test(typeof a))return this;for(var i=1,n=arguments.length;i<n;i++)b.push(arguments[i]);this.____(a,b);return this};this.fire=function(a){var b=a||g,c,d;loop:for(var i=0,n=f.length;i<n;i++){c=f[i];if(b instanceof h){b.____(c.func,c.args);continue}switch(typeof c.func){case'string':d=b[c.func];break;case'function':d=c.func;break;case'object':b=c.func;continue loop;break}b=(typeof d=='function')?d.apply(b,c.args):d}return b};this.toFunction=function(){var b=this;return function(a){return b.fire(a)}}};var j=(function(){var a=[],b;for(b in new h)a.push(b);return new RegExp('^(?:'+a.join('|')+')$')})();h.addMethods=function(b){var c=[],d,i,n,e=this.prototype;for(d in b){if(Number(d)!=d)c.push(d)}if(b instanceof Array){for(i=0,n=b.length;i<n;i++){if(typeof b[i]=='string')c.push(b[i])}}for(i=0,n=c.length;i<n;i++)(function(a){if(j.test(a))return;e[a]=function(){this.____(a,arguments);return this}})(c[i]);if(b.prototype)this.addMethods(b.prototype)};h.inherited=function(){throw new Error('MethodChain cannot be subclassed');};return h})();var it=its=function(){return new Function.MethodChain};Function.MethodChain.addMethods(["abbr","abs","accept","acceptCharset","accesskey","acos","action","addEventListener","adjacentNode","align","alignWithTop","alink","alt","anchor","appendChild","appendedNode","apply","archive","arguments","arity","asin","atan","atan2","attrNode","attributes","axis","background","bgcolor","big","blink","blur","bold","border","call","caller","ceil","cellpadding","cellspacing","char","charAt","charCodeAt","charoff","charset","checked","childNodes","cite","className","classid","clear","click","clientHeight","clientLeft","clientTop","clientWidth","cloneNode","code","codebase","codetype","color","cols","colspan","compact","concat","content","coords","cos","data","datetime","declare","deep","defer","dir","disabled","dispatchEvent","enctype","event","every","exec","exp","face","filter","firstChild","fixed","floor","focus","fontcolor","fontsize","forEach","frame","frameborder","fromCharCode","getAttribute","getAttributeNS","getAttributeNode","getAttributeNodeNS","getDate","getDay","getElementsByTagName","getElementsByTagNameNS","getFullYear","getHours","getMilliseconds","getMinutes","getMonth","getSeconds","getTime","getTimezoneOffset","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getYear","global","handler","hasAttribute","hasAttributeNS","hasAttributes","hasChildNodes","hasOwnProperty","headers","height","href","hreflang","hspace","htmlFor","httpEquiv","id","ignoreCase","index","indexOf","innerHTML","input","insertBefore","insertedNode","isPrototypeOf","ismap","italics","join","label","lang","language","lastChild","lastIndex","lastIndexOf","length","link","listener","localName","log","longdesc","map","marginheight","marginwidth","match","max","maxlength","media","method","min","multiline","multiple","name","namespace","namespaceURI","nextSibling","node","nodeName","nodeType","nodeValue","nohref","noresize","normalize","noshade","now","nowrap","object","offsetHeight","offsetLeft","offsetParent","offsetTop","offsetWidth","onblur","onchange","onclick","ondblclick","onfocus","onkeydown","onkeypress","onkeyup","onload","onmousedown","onmousemove","onmouseout","onmouseover","onmouseup","onreset","onselect","onsubmit","onunload","ownerDocument","parentNode","parse","pop","pow","prefix","previousSibling","profile","prompt","propertyIsEnumerable","push","random","readonly","reduce","reduceRight","rel","removeAttribute","removeAttributeNS","removeAttributeNode","removeChild","removeEventListener","removedNode","replace","replaceChild","replacedNode","rev","reverse","round","rows","rowspan","rules","scheme","scope","scrollHeight","scrollIntoView","scrollLeft","scrollTop","scrollWidth","scrolling","search","selected","setAttribute","setAttributeNS","setAttributeNode","setAttributeNodeNS","setDate","setFullYear","setHours","setMilliseconds","setMinutes","setMonth","setSeconds","setTime","setUTCDate","setUTCFullYear","setUTCHours","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","setYear","shape","shift","sin","size","slice","small","some","sort","source","span","splice","split","sqrt","src","standby","start","strike","style","sub","substr","substring","summary","sup","tabIndex","tabindex","tagName","tan","target","test","text","textContent","title","toArray","toFunction","toGMTString","toLocaleDateString","toLocaleFormat","toLocaleString","toLocaleTimeString","toLowerCase","toSource","toString","toUTCString","toUpperCase","type","unshift","unwatch","useCapture","usemap","valign","value","valueOf","valuetype","version","vlink","vspace","watch","width"]);[Ajax,Array,Class,Date,Element,Element.Methods,Element.Methods.Simulated,Enumerable,Event,Form,Form.Element,Function,Hash,Insertion,Number,Object,ObjectRange,PeriodicalExecuter,Position,Prototype,String,Template,document].each(Function.MethodChain.addMethods.bind(Function.MethodChain));
\ No newline at end of file
Index: src/prototype.js
===================================================================
--- src/prototype.js	(revision 8644)
+++ src/prototype.js	(working copy)
@@ -35,6 +35,6 @@
 
 <%= include 'enumerable.js', 'array.js', 'number.js', 'hash.js', 'range.js' %>
 
-<%= include 'ajax.js', 'dom.js', 'selector.js', 'form.js', 'event.js', 'deprecated.js' %>
+<%= include 'ajax.js', 'dom.js', 'selector.js', 'form.js', 'event.js', 'deprecated.js', 'reiterate.js', 'method_chain.js' %>
 
 Element.addMethods();
Index: src/reiterate.js
===================================================================
--- src/reiterate.js	(revision 0)
+++ src/reiterate.js	(revision 0)
@@ -0,0 +1 @@
+Function.from=function(a){if(a.toFunction)return a.toFunction();if(typeof a=='function')return a;if(typeof a=='object')return Function.fromObject(a);return function(x){return x}};String.prototype.toFunction=function(){var d=this.split('.');if(!d[0])return function(x){return x};return function(o){var a,b=o,c;for(var i=0,n=d.length;i<n;i++){c=d[i];a=b;b=a[c];if(typeof b=='function')b=b.apply(a)}return b}};Array.prototype.toFunction=function(){var b=this[0],c=this.slice(1),d;if(!b)return function(x){return x};if(d=Function.OPERATORS[b])b=d;return function(o){var a=(typeof b=='function')?b:o[b];return(typeof a=='function')?a.apply(o,c):undefined}};Function.fromObject=function(f){var g=[];for(var h in f){if(f.hasOwnProperty(h))g.push(h)}if(g.length===0)return function(x){return x};return function(o){var a=true,b,c,d,e;for(var i=0,n=g.length;i<n;i++){b=g[i];c=o[b];d=f[b];if(e=Function.OPERATORS[b])c=e;if(typeof c=='function'&&!(d instanceof Array))d=[d];a=a&&((typeof c=='function')?c.apply(o,d):c==d)}return a}};Hash.prototype.toFunction=function(){return Function.fromObject(this._object||this)};Function.OPERATORS={'+':function(x){return this+x},'-':function(x){return this-x},'*':function(x){return this*x},'/':function(x){return this/x},'%':function(x){return this%x},'<':function(x){return this<x},'<=':function(x){return this<=x},'>':function(x){return this>x},'>=':function(x){return this>=x},'==':function(x){return this.valueOf()==x},'!=':function(x){return this.valueOf()!=x},'===':function(x){return this.valueOf()===x},'!==':function(x){return this.valueOf()!==x},'&&':function(x){return this.valueOf()&&x},'&':function(x){return this&x},'||':function(x){return this.valueOf()||x},'|':function(x){return this|x},'typeof':function(x){return typeof this.valueOf()==x},'instanceof':function(x){return this instanceof x}};[Enumerable,Array.prototype,Hash.prototype,ObjectRange.prototype,Ajax.Responders,Element.ClassNames.prototype].each(function(d){$w('each all any collect detect findAll max min partition reject sortBy map find select filter every some').each(function(b){if(!d[b]){return}var c=d[b];d[b]=function(){var a=$A(arguments);if(a[0])a[0]=Function.from(a[0]);return c.apply(this,a)}});d.count=function(a,b){return this.findAll(a,b).length}});
\ No newline at end of file
Index: test/unit/enumerable.html
===================================================================
--- test/unit/enumerable.html	(revision 8644)
+++ test/unit/enumerable.html	(working copy)
@@ -32,6 +32,10 @@
 </tbody>
 </table>
 
+<div style="display: block;" class="finder"></div>
+<div style="display: none;" class="finder"></div>
+<div style="display: inline;" class="finder"></div>
+
 <!-- Tests follow -->
 <script type="text/javascript" language="javascript" charset="utf-8">
 // <![CDATA[
@@ -45,6 +49,20 @@
     
     Nicknames: $w('sam- noradio htonl Ulysses'),
     
+    Radios: [
+      {checked: true}, {checked: false}, {checked: 1}, {checked: true},
+      {checked: ''}, {checked: 17}, {checked: null}, {checked: 'foo'}
+    ],
+    
+    Records: [
+      {valid: function() { return this.name == 'Bob'; }, name: 'Mike'},
+      {valid: function() { return this.name == 'Bob'; }, name: 'Bob'}
+    ],
+    
+    Values: [{value: 12}, {value: -5}, {value: 9}, {value: 6}],
+    
+    Nested: [{value: {integer: 12}}, {value: {integer: -5}}, {value: {integer: 9}}, {value: {integer: 6}}],
+    
     Basic: [1, 2, 3],
     
     Primes: [
@@ -108,6 +126,43 @@
         return value == this.target_value;
       }, { target_value: 2 }));
     }},
+    
+    testBinaryOperators: function() {with(this) {
+      assertEqual('3, 3', [9, 3, 1, 7, 8, 5, 3, 0].findAll(['==', 3]).join(', '));
+      assertEqual('9, 7, 8', [9, 3, 1, 7, 8, 5, 3, 0].findAll(['>', 5]).join(', '));
+      assertEqual('19, 13, 21, 15, 17', [7, 1, 9, 3, 5].map(['+', 12]).join(', '));
+      assertEqual('2, 7, 3, 6', [8, 28, 12, 24].map(['/', 4]).join(', '));
+      
+      assertEqual('7, 8, 5', [9, 3, 1, 7, 8, 5, 3, 0].findAll({'>': 3, '<=': 8}).join(', '));
+      assertEqual('1, 3, 1, 3, 0, 1, 3, 0', [9, 3, 1, 7, 8, 5, 3, 0].map(['%', 4]).join(', '));
+      
+      assertEqual('13, ruby, foo, 77, foo, foo',
+        [13, 'ruby', '', 77, false, 0].map(['||', 'foo']).join(', '));
+      
+      var object = {foo: 'bar'};
+      var stuff = [8,2,'sandwich',4,4.2,object,'4',4,''];
+      
+      assertEqual('4, 4', stuff.findAll(['===', 4]).join(', '));
+      assertEqual('4, 4, 4', stuff.findAll(['==', 4]).join(', '));
+      
+      assertEqual('sandwich, 4, ', stuff.findAll(['instanceof', String]).join(', '));
+      assertEqual(1, stuff.findAll(['==', 'sandwich']).length);
+      assertEqual(1, stuff.findAll(['===', '4']).length);
+      
+      assertEqual('bar', stuff.find(['typeof', 'object']).foo);
+      assertEqual('bar', stuff.find(['==', object]).foo);
+      
+      assertEqual('8, 2, 4, 4.2, 4', stuff.findAll({'instanceof': Number}).join(', '));
+      assertEqual('4, 4', stuff.findAll({'instanceof': Number, '==': 4}).join(', '));
+      assertEqual('2', stuff.findAll({'instanceof': Number, '<=': 3}).join(', '));
+    }},
+    
+    testCount: function() {with(this) {
+      assertEqual(7, $R(9,24).count({'>': 12, '<=': 19}));
+      this.prop = "reiterate";
+      var words = $w('could I please just reiterate slowly');
+      assertEqual(1, words.count(function(w) { return w == this.prop; }, this));
+    }},
 
     testAny: function() {with(this) {
       assert(!([].any()));
@@ -122,6 +177,8 @@
       assert(!Fixtures.Basic.any(function(value) {
         return value > 5;
       }));
+      assert(Fixtures.Radios.any('checked'));
+      assert(Fixtures.Records.any('valid'));
     }},
     
     testAll: function() {with(this) {
@@ -137,6 +194,9 @@
       assert(!Fixtures.Basic.all(function(value) {
         return value > 1;
       }));
+      assert([{checked: true}, {checked: 12}, {checked: 'foo'}].all('checked'));
+      assert(!Fixtures.Radios.all('checked'));
+      assert(!Fixtures.Records.all('valid'));
     }},
     
     testCollect: function() {with(this) {
@@ -146,6 +206,24 @@
         }).join(", "));
       
       assertEqual(26,  Fixtures.Primes.map().length);
+      
+      assertEqual(Fixtures.Nicknames.join(', '),
+        Fixtures.People.collect('nickname').join(', '));
+      
+      assertEqual(Fixtures.Values.pluck('value').join(', '),
+        Fixtures.Nested.collect('value.integer').join(', '));
+      
+      var set = Fixtures.Values.collect(function(v) {
+        return {
+          value: function() { return {quantity: this.k}; },
+          k: v.value
+        };
+      });
+      assertEqual(Fixtures.Values.pluck('value').join(', '),
+        set.collect('value.quantity').join(', '));
+      
+      assertEqual('plums, apples, oranges',
+        ['apples', 'oranges', 'plums'].sortBy({replace: [/^./, '']}).join(', '));
     }},
     
     testDetect: function() {with(this) {
@@ -153,6 +231,9 @@
         Fixtures.People.detect(function(person) {
           return person.nickname.match(/no/);
         }).name);
+      assertEqual(true, Fixtures.Radios.detect('checked').checked);
+      assertEqual(true, Fixtures.Radios.detect(it().checked()).checked);
+      assertEqual('Bob', Fixtures.Records.detect('valid').name);
     }},
     
     testEachSlice: function() {with(this) {
@@ -181,6 +262,15 @@
     testFindAll: function() {with(this) {
       assertEqual(Fixtures.Primes.join(', '),
         Fixtures.Z.findAll(prime).join(', '));
+      assertEqual(5, Fixtures.Radios.findAll('checked').length);
+      assertEqual(2, $$('div.finder').findAll('visible').length);
+      
+      assertEqual(3, $$('div').findAll(['hasClassName', 'finder']).length);
+      assertEqual(3, $$('div').findAll({hasClassName: ['finder']}).length);
+      assertEqual(3, $$('div').findAll(it().hasClassName('finder')).length);
+      assertEqual(2, $$('div').findAll({hasClassName: 'finder', visible: true}).length);
+      assertEqual(3, $$('div').findAll({hasClassName: ['finder'], tagName: 'DIV'}).length);
+      assertEqual(0, $$('div').findAll({hasClassName: ['finder'], tagName: 'SPAN'}).length);
     }},
     
     testGrep: function() {with(this) {
@@ -257,12 +347,15 @@
       assertEqual(97, Fixtures.Primes.max());
       assertEqual(2, [ -9, -8, -7, -6, -4, -3, -2,  0, -1,  2 ].max());
       assertEqual('sam-', Fixtures.Nicknames.max()); // ?s > ?U
+      assertEqual(12, Fixtures.Values.max('value'));
+      assertEqual(12, Fixtures.Values.max(its().value()));
     }},
     
     testMin: function() {with(this) {
       assertEqual(1, Fixtures.Z.min());
       assertEqual(0, [  1, 2, 3, 4, 5, 6, 7, 8, 0, 9 ].min());
       assertEqual('Ulysses', Fixtures.Nicknames.min()); // ?U < ?h
+      assertEqual(-5, Fixtures.Values.min('value'));
     }},
     
     testPartition: function() {with(this) {
@@ -273,6 +366,10 @@
       assertEqual(2, result.length);
       assertEqual('sam-, htonl', result[0].join(', '));
       assertEqual('noradio, Ulysses', result[1].join(', '));
+      
+      result = Fixtures.Radios.partition('checked');
+      assertEqual(5, result[0].length);
+      assertEqual(3, result[1].length);
     }},
     
     testPluck: function() {with(this) {
@@ -284,6 +381,12 @@
       assertEqual(0, 
         Fixtures.Nicknames.reject(Prototype.K).length);
         
+      assertEqual(3,
+        Fixtures.Radios.reject('checked').length);
+        
+      assertEqual(1,
+        Fixtures.Records.reject('valid').length);
+        
       assertEqual('sam-, noradio, htonl',
         Fixtures.Nicknames.reject(function(nickname) {
           return nickname != nickname.toLowerCase();
@@ -295,6 +398,9 @@
         Fixtures.People.sortBy(function(value) {
           return value.nickname.toLowerCase();
         }).pluck('nickname').join(', '));
+        
+      assertEqual('-5, 6, 9, 12',
+        Fixtures.Values.sortBy(its().value()).map('value').join(', '));
     }},
     
     testToArray: function() {with(this) {
